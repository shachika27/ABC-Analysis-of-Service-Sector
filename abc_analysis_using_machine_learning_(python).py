# -*- coding: utf-8 -*-
"""ABC Analysis using Machine Learning (Python) - (1RV19IM011, 1RV19IM051).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HK6dkuowQCueK7cXBe4TWnvycykZzTjm
"""

import pandas as pd
import numpy as np
import io

from google.colab import files
uploaded = files.upload()

df = pd.read_excel(io.BytesIO(uploaded.get('Restaurant food consumption.xlsx')))

df["revenue"] = df["ItemQty"] * df["ItemPrice"]

import seaborn as sns
sns.distplot(df["revenue"])

def bins(x):
    for bar in range(10, 70, 10):
        if x<= bar:
            return bar
df["rev_dist"] = df["revenue"].apply(lambda x: bins(x))

df["count"] = 1
pivot_table = pd.pivot_table(df, index = ["rev_dist"], values = ["count"], aggfunc = np.sum)

# import model from SKLearn
from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=3)
kmeans.fit(pivot_table)

pivot_table["category"] = kmeans.labels_

ABC_dict = {    
    0: "A",
    1: "C",
    2: "B"
}
pivot_table["ABC"] = pivot_table["category"].apply(lambda x: ABC_dict[x])

df = pd.merge(df, pivot_table, on = "rev_dist", how ="left")

df

# Commented out IPython magic to ensure Python compatibility.
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as plt
# %matplotlib inline

df1 = df[df.category==0]
df2 = df[df.category==1]
df3 = df[df.category==2]
plt.scatter(df1.revenue,df1['ItemQty'],color='green')
plt.scatter(df2.revenue,df2['ItemQty'],color='red')
plt.scatter(df3.revenue,df3['ItemQty'],color='black')

plt.xlabel('Revenue')
plt.ylabel('Quantity')